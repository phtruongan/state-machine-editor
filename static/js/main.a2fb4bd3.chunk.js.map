{"version":3,"sources":["diagram.js","utils.js","infoBox.js","toolbar.js","elementModal.js","App.js","serviceWorker.js","index.js","wca-state-machine_pb.js"],"names":["adjustVertices","graph","cell","model","joint","dia","Element","_","chain","getConnectedLinks","groupBy","link","omit","source","id","target","each","group","key","first","value","sourceId","get","previous","targetId","siblings","getLinks","filter","sibling","siblingSourceId","siblingTargetId","numSiblings","length","unset","sourceCenter","getCell","getBBox","center","targetCenter","midPoint","g","Line","midpoint","theta","index","offset","Math","ceil","sign","GAP","reverse","angle","toRad","vertex","Point","fromPolar","vertices","shapes","basic","Circle","define","attrs","circle","stroke-width","text","font-weight","standard","Link","line","sourceMarker","type","width","stroke","smooth","Diagram","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Graph","adjustGraphVertices","partial","on","state_shape_width","state_shape_height","state_spacing_x","state_spacing_y","state_per_row","cellId2FSMElement","renderAllStates","bind","assertThisInitialized","renderAllTransitions","getStateName2CellMap","clearGraph","inherits","createClass","_this$props","onClickCell","paperWidth","$el","$","el","console","log","paper","Paper","height","gridSize","restrictTranslate","floor","parseInt","options","clear","stateCells","push","fsm","_this2","getStatesList","map","state","idx","x","y","label","getName","fsa","State","position","size","getStartState","attr","addGraphCellWithRef","_this3","states","stateName2Cell","getTransitionsList","transition","getNextState","CustomArrow","labels","getElements","jointElement","stateName","error","ref","addCell","_this4","react_default","a","createElement","Component","fsmPb","require","FSMElementType","STATE","Symbol","TRANSITION","freeze","getFSMElementType","element","getProcessorsList","isObject","o","getPropertyByString","s","replace","split","i","n","k","findStatePbByName","result","findTransitionOriginateState","curTransition","elementToFormValues","values","elementType","name","isStartState","to","from","instruction","audio","getInstruction","getAudio","image","getImage","video","getVideo","Error","callable","elementCallables","elementCallableItem","item","getCallableName","callableArgs","JSON","parse","getCallableArgs","args","keys","callableToFormValues","getPredicatesList","getElementCallables","formCallableToElementCallable","callbleFormValue","setFunc","callablePbType","zoo","callableArray","_loop","callableValue","callablePb","setName","setCallableName","setCallableArgs","stringify","formValuesToElement","formValue","initElement","undefined","addStates","Transition","addTransitions","newName","aux","oldName","setNextState","setStateName","setStartState","setProcessorsList","Processor","procZoo","newFromStateName","oldFromState","indexOf","splice","setTransitionFromState","oldFromStateName","instPb","Instruction","setAudio","setImage","setVideo","setInstruction","setPredicatesList","TransitionPredicate","predZoo","getColumnWidth","rows","accessor","headerText","cellLength","max","apply","toConsumableArray","row","concat","min","InfoBox","imageInstUrl","res","URL","revokeObjectURL","blob","Blob","createObjectURL","prepareResource","tableData","callableItem","callable_name","callable_args","tableColumns","Header","filterMethod","matchSorter","filterAll","Cell","main_default","src","ListGroup_default","style","margin","ListGroupItem_default","variant","Fragment","alt","es","data","filterable","defaultFilterMethod","String","columns","defaultPageSize","makeTable","instance","ToolBar","_ref","onImport","onAdd","onExport","onEdit","onDelete","Row_default","ButtonGroup_default","Col_default","sm","lib_default","as","onChange","Button_default","className","onClick","Dropdown_default","Toggle","Menu","Item","isEmpty","errorMessage","test","BSFormikField","field","placeholder","defaultValue","isValid","objectWithoutProperties","Form_default","Group","Row","Label","column","Control","assign","required","ImageUploadField","imageBytes","form","e","fileArray","forEach","fileContent","setFieldValue","Uint8Array","SelectFormikField","_ref2","selectOptions","react_select_esm","find","option","onBlur","CallableNameField","_ref3","elementModal_BSFormikField","CallableArgField","_ref4","addFieldError","errors","fieldName","createCallableMultiFields","callableTitle","arrayHelpers","zooOptions","getZooOptions","formik_esm","component","validate","createCallableArgMultiFields","remove","argIndex","ElementModal","React","createRef","onHide","title","_this$props2","show","onModalCancel","onModalSave","callableZoo","callableButtonValue","initValues","getInitModalValuesFromElement","Modal_default","Title","Body","initialValues","onSubmit","_ref5","setSubmitting","render","_ref6","existingItemArray","includes","isDuplicate","isUniqueName","_ref7","checked","fsmStateOptions","createTransitionBasicFields","eachCallable","Footer","current","submitForm","App","diagramRef","diagramContainerRef","alert","StateMachine","curFSMElement","modalInitElement","alertMsg","msg","showNewElementModal","newElementModalType","Container_default","fluid","Alert_default","dismissible","backgroundColor","diagram_Diagram","window","innerWidth","toolbar_ToolBar","infoBox","elementModal","setState","fsmData","deserializeBinary","err","loadFsm","fsmPbSerialized","serializeBinary","saveAs","isSafe","isElementSafeToDelete","elementIdx","hasCurElement","deleteStatePb","deleteTransitionPb","elementView","fsmElement","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","jspb","goog","global","Function","exportSymbol","proto","opt_data","Message","initialize","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","f","obj","getFieldWithDefault","callableName","callableKwargsMap","getCallableKwargsMap","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","readMessage","message","Map","readBytes","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","writeString","getLength","writeBytes","setProto3StringField","opt_noLazyCreate","getMapField","clearCallableKwargsMap","getImage_asB64","getVideo_asB64","getImage_asU8","getVideo_asU8","bytesAsB64","bytesAsU8","setProto3BytesField","repeatedFields_","predicatesList","toObjectList","nextState","addPredicates","writeRepeatedMessage","writeMessage","getRepeatedWrapperField","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearPredicatesList","getWrapperField","setWrapperField","clearInstruction","hasInstruction","getField","processorsList","transitionsList","addProcessors","clearProcessorsList","setTransitionsList","clearTransitionsList","statesList","assetsMap","getAssetsMap","startState","setStatesList","clearStatesList","clearAssetsMap","object","extend","exports"],"mappings":"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","file":"static/js/main.a2fb4bd3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport joint from \"jointjs\";\nimport _ from 'lodash';\n\n\n// define custom state machine JointJS elements\njoint.shapes.basic.Circle.define(\"fsa.State\", {\n  attrs: {\n    circle: {\n      \"stroke-width\": 2\n    },\n    text: {\n      \"font-weight\": \"800\"\n    }\n  }\n});\n\njoint.shapes.standard.Link.define(\"fsa.CustomArrow\", {\n  attrs: {\n    line: {\n      sourceMarker: {\n        type: \"circle\",\n        width: 5,\n        stroke: \"none\"\n      }\n    }\n  },\n  smooth: true\n});\n\nfunction adjustVertices(graph, cell) {\n  // if `cell` is a view, find its model\n  cell = cell.model || cell;\n\n  if (cell instanceof joint.dia.Element) {\n    // `cell` is an element\n\n    _.chain(graph.getConnectedLinks(cell))\n      .groupBy(function(link) {\n        // the key of the group is the model id of the link's source or target\n        // cell id is omitted\n        return _.omit([link.source().id, link.target().id], cell.id)[0];\n      })\n      .each(function(group, key) {\n        // if the member of the group has both source and target model\n        // then adjust vertices\n        if (key !== \"undefined\") adjustVertices(graph, _.first(group));\n      })\n      .value();\n\n    return;\n  }\n\n  // `cell` is a link\n  // get its source and target model IDs\n  var sourceId = cell.get(\"source\").id || cell.previous(\"source\").id;\n  var targetId = cell.get(\"target\").id || cell.previous(\"target\").id;\n\n  // if one of the ends is not a model\n  // (if the link is pinned to paper at a point)\n  // the link is interpreted as having no siblings\n  if (!sourceId || !targetId) {\n    // no vertices needed\n    cell.unset(\"vertices\");\n    return;\n  }\n\n  // identify link siblings\n  var siblings = graph.getLinks().filter(function(sibling) {\n    var siblingSourceId = sibling.source().id;\n    var siblingTargetId = sibling.target().id;\n\n    // if source and target are the same\n    // or if source and target are reversed\n    return (\n      (siblingSourceId === sourceId && siblingTargetId === targetId) ||\n      (siblingSourceId === targetId && siblingTargetId === sourceId)\n    );\n  });\n\n  var numSiblings = siblings.length;\n  switch (numSiblings) {\n    case 0: {\n      // the link has no siblings\n      break;\n    }\n    default: {\n      if (numSiblings === 1) {\n        // there is only one link\n        // no vertices needed\n        cell.unset(\"vertices\");\n      }\n\n      // there are multiple siblings\n      // we need to create vertices\n\n      // find the middle point of the link\n      var sourceCenter = graph\n        .getCell(sourceId)\n        .getBBox()\n        .center();\n      var targetCenter = graph\n        .getCell(targetId)\n        .getBBox()\n        .center();\n      var midPoint = joint.g.Line(sourceCenter, targetCenter).midpoint();\n\n      // find the angle of the link\n      var theta = sourceCenter.theta(targetCenter);\n\n      // constant\n      // the maximum distance between two sibling links\n      var GAP = 20;\n\n      _.each(siblings, function(sibling, index) {\n        // we want offset values to be calculated as 0, 20, 20, 40, 40, 60, 60 ...\n        var offset = GAP * Math.ceil(index / 2);\n\n        // place the vertices at points which are `offset` pixels perpendicularly away\n        // from the first link\n        //\n        // as index goes up, alternate left and right\n        //\n        //  ^  odd indices\n        //  |\n        //  |---->  index 0 sibling - centerline (between source and target centers)\n        //  |\n        //  v  even indices\n        var sign = index % 2 ? 1 : -1;\n\n        // to assure symmetry, if there is an even number of siblings\n        // shift all vertices leftward perpendicularly away from the centerline\n        if (numSiblings % 2 === 0) {\n          offset -= (GAP / 2) * sign;\n        }\n\n        // make reverse links count the same as non-reverse\n        var reverse = theta < 180 ? 1 : -1;\n\n        // we found the vertex\n        var angle = joint.g.toRad(theta + sign * reverse * 90);\n        var vertex = joint.g.Point.fromPolar(offset, angle, midPoint);\n\n        // replace vertices array with `vertex`\n        sibling.vertices([vertex]);\n      });\n    }\n  }\n}\n\nconst create_transition_cell = (source, target, label) => {\n  var cell = new joint.shapes.fsa.CustomArrow({\n    source: {\n      id: source.id\n    },\n    target: {\n      id: target.id\n    },\n    labels: [\n      {\n        position: 0.5,\n        attrs: {\n          text: {\n            text: label || \"\"\n          }\n        }\n      }\n    ]\n  });\n  return cell;\n};\n\nconst create_state_cell = (x, y, label) => {\n  let cell = new joint.shapes.fsa.State({\n    position: {\n      x: x,\n      y: y\n    },\n    size: {\n      width: 100,\n      height: 100\n    },\n    attrs: {\n      text: {\n        text: label\n      }\n    }\n  });\n  return cell;\n};\n\nexport class Diagram extends Component {\n  constructor(props) {\n    super(props);\n    this.graph = new joint.dia.Graph();\n    // bind `graph` to the `adjustVertices` function\n    var adjustGraphVertices = _.partial(adjustVertices, this.graph);\n    // adjust vertices when a cell is removed or its source/target was changed\n    this.graph.on('add remove change:source change:target', adjustGraphVertices);\n\n    this.state_shape_width = 50;\n    this.state_shape_height = 50;\n    this.state_spacing_x = 250;\n    this.state_spacing_y = 150;\n    this.state_per_row = 3;\n    this.cellId2FSMElement = {};\n    this.renderAllStates = this.renderAllStates.bind(this);\n    this.renderAllTransitions = this.renderAllTransitions.bind(this);\n    this.getStateName2CellMap = this.getStateName2CellMap.bind(this);\n    this.clearGraph = this.clearGraph.bind(this);\n  }\n\n  componentDidMount() {\n    const { onClickCell, paperWidth } = this.props;\n    this.$el = $(this.el);\n    console.log(\"paper width is: \" + paperWidth);\n    const paper = new joint.dia.Paper({\n      el: this.$el,\n      width: paperWidth,\n      height: 5 * paperWidth,\n      gridSize: 1,\n      model: this.graph,\n      restrictTranslate: true\n    });\n    paper.on(\"cell:pointerdblclick\", onClickCell);\n    paper.on(\"cell:pointerclick\", onClickCell);\n    this.state_per_row =\n      Math.floor(\n        parseInt(paper.options.width, 10) /\n          (this.state_shape_width + this.state_spacing_x)\n      ) + 1;\n  }\n\n  componentWillUnmount() {\n    this.graph.clear();\n    this.cellId2FSMElement = {};\n  }\n\n  componentDidUpdate() {}\n\n  handleStateCallback(cell) {\n    this.stateCells.push(cell);\n  }\n\n  renderAllStates(fsm) {\n    const stateCells = fsm.getStatesList().map((state, idx) => {\n      const cell = create_state_cell(\n        Math.floor(idx % this.state_per_row) * this.state_spacing_x,\n        Math.floor(idx / this.state_per_row) * this.state_spacing_y,\n        state.getName()\n      );\n      // mark start state\n      if (fsm.getStartState() === state.getName()) {\n        cell.attr(\"circle/stroke-width\", \"5\");\n      }\n      this.addGraphCellWithRef(cell, state);\n      return null;\n    }, this);\n    return stateCells;\n  }\n\n  renderAllTransitions(fsm) {\n    const states = fsm.getStatesList();\n    const stateName2Cell = this.getStateName2CellMap();\n    const transitionCells = states.map(state => {\n      return state.getTransitionsList().map(transition => {\n        const cell = create_transition_cell(\n          stateName2Cell[state.getName()],\n          stateName2Cell[transition.getNextState()],\n          transition.getName()\n        );\n        this.addGraphCellWithRef(cell, transition);\n        return null;\n      }, this);\n    }, this);\n    return transitionCells;\n  }\n\n  getStateName2CellMap() {\n    const stateCells = this.graph.getElements();\n    const stateName2Cell = {};\n    stateCells.map(jointElement => {\n      const stateName = jointElement.attr(\"text/text\");\n      if (stateName in stateName2Cell) {\n        // throw new Error(\"Invalid FSM! Duplicate state name found.\");\n        console.error(\"Duplicate State Name: \" + stateName);\n      } else {\n        stateName2Cell[stateName] = jointElement;\n      }\n      return null;\n    });\n    return stateName2Cell;\n  }\n\n  addGraphCellWithRef(cell, ref) {\n    // addGraphCell add a cell to the graph and record the reference object\n    // this cell represents.\n    this.graph.addCell(cell);\n    this.cellId2FSMElement[cell.id] = ref;\n  }\n\n  clearGraph() {\n    this.graph.clear();\n    this.cellId2FSMElement = {};\n  }\n\n  render() {\n    const { fsm } = this.props;\n    if (fsm != null) {\n      this.clearGraph();\n      this.renderAllStates(fsm);\n      this.renderAllTransitions(fsm);\n    }\n    return <div ref={el => (this.el = el)} />;\n  }\n}\n","import procZoo from \"./processor-zoo.json\";\nimport predZoo from \"./predicate-zoo.json\";\nvar fsmPb = require(\"./wca-state-machine_pb\");\n\nexport const FSMElementType = {\n  STATE: Symbol(\"state\"),\n  TRANSITION: Symbol(\"transition\")\n};\nObject.freeze(FSMElementType);\n\n// only support state and transition two types for now\nexport const getFSMElementType = element => {\n  return typeof element.getProcessorsList === \"function\"\n    ? FSMElementType.STATE\n    : FSMElementType.TRANSITION;\n};\n\nfunction isObject(o) {\n  //How you acomplish this is upto you.\n  return o === Object(o);\n}\n\n// allow array access using nested not annatation\n// obj = {\n//     'a': ['property': 'test']\n// }\n// e.g. obj['a.0.property']\nexport const getPropertyByString = function(o, s) {\n  if (s) {\n    s = s.replace(/^\\./, \"\"); // strip a leading dot\n    var a = s.split(\".\");\n    for (var i = 0, n = a.length; i < n; ++i) {\n      var k = a[i];\n      if (isObject(o) && k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    }\n    return o;\n  } else {\n    return;\n  }\n};\n\nexport const findStatePbByName = function(stateName, fsm) {\n  let result = null;\n  fsm.getStatesList().map(state => {\n    if (state.getName() === stateName) {\n      result = state;\n    }\n    return null;\n  });\n  return result;\n};\n\nexport const findTransitionOriginateState = function(transition, fsm) {\n  let result = null;\n  fsm.getStatesList().map(state => {\n    state.getTransitionsList().map(curTransition => {\n      if (curTransition === transition) {\n        result = state;\n      }\n      return null;\n    });\n    return null;\n  });\n  return result;\n};\n\nconst callableToFormValues = function(elementCallables) {\n  let result = [];\n  elementCallables.map(elementCallableItem => {\n    let item = {};\n    item.name = elementCallableItem.getName();\n    item.type = elementCallableItem.getCallableName();\n    let callableArgs = JSON.parse(elementCallableItem.getCallableArgs());\n    item.args = {};\n    Object.keys(callableArgs).map(key => {\n      item.args[key] = callableArgs[key];\n      return null;\n    });\n    result.push(item);\n    return null;\n  });\n  return result;\n};\n\nconst getElementCallables = function(element) {\n  const elementType = getFSMElementType(element);\n  let elementCallables = null;\n  switch (elementType) {\n    case FSMElementType.STATE:\n      elementCallables = element.getProcessorsList();\n      break;\n    case FSMElementType.TRANSITION:\n      elementCallables = element.getPredicatesList();\n      break;\n    default:\n      throw new Error(\n        \"Unsupported Element Type: \" +\n          elementType +\n          \". Failed to add a new element\"\n      );\n  }\n  return elementCallables;\n};\n\nexport const elementToFormValues = function(element, fsm) {\n  const values = {};\n  values.callable = [];\n  const elementType = getFSMElementType(element);\n  // name\n  const name = element.getName();\n  values.name = name;\n  // type specific attrs\n  switch (elementType) {\n    case FSMElementType.STATE:\n      values.isStartState = element.getName() === fsm.getStartState();\n      break;\n    case FSMElementType.TRANSITION:\n      values.to = element.getNextState();\n      values.from = findTransitionOriginateState(element, fsm).getName();\n      values.instruction = {};\n      values.instruction.audio = element.getInstruction().getAudio();\n      values.instruction.image = element.getInstruction().getImage();\n      values.instruction.video = element.getInstruction().getVideo();\n      break;\n    default:\n      throw new Error(\n        \"Unsupported Element Type: \" +\n          elementType +\n          \". Failed to add a new element\"\n      );\n      break;\n  }\n  // handle callables\n  values.callable = callableToFormValues(getElementCallables(element));\n  // add predicates\n  return values;\n};\n\nconst formCallableToElementCallable = function(\n  callbleFormValue,\n  setFunc,\n  callablePbType,\n  zoo\n) {\n  let callableArray = [];\n  for (let idx = 0; idx < callbleFormValue.length; idx++) {\n    let callableValue = callbleFormValue[idx];\n    let callablePb = new callablePbType();\n    callablePb.setName(callableValue.name);\n    callablePb.setCallableName(callableValue.type);\n    // callable args\n    // need to filter out relevant arguments only\n    // since the form may contain irrelevant arguments for other callable type\n    // this is caused by user switching callable types\n    let args = {};\n    Object.keys(zoo[callableValue.type]).map(key => {\n      args[key] = callableValue.args[key];\n      return null;\n    });\n    callablePb.setCallableArgs(JSON.stringify(args));\n    callableArray.push(callablePb);\n  }\n  setFunc(callableArray);\n};\n\n/**\n * Change the name of a state\n * @param {*} element\n * @param {*} newName\n * @param {*} fsm\n */\nconst setStateName = function(element, newName, aux) {\n  const { fsm } = aux;\n  let oldName = element.getName();\n  if (oldName) {\n    // need to fix affected transitions nextState when a state name\n    // changes\n    fsm.getStatesList().map(state => {\n      state.getTransitionsList().map(curTransition => {\n        if (curTransition.getNextState() === oldName) {\n          curTransition.setNextState(newName);\n        }\n        return null;\n      });\n      return null;\n    });\n  }\n  element.setName(newName);\n};\n\nconst setTransitionFromState = function(element, newFromStateName, aux) {\n  const { fsm } = aux;\n  let oldFromState = findTransitionOriginateState(element, fsm);\n  if (newFromStateName !== oldFromState.getName()) {\n    // remove the transition from the old state\n    let index = oldFromState.getTransitionsList().indexOf(element);\n    if (index > -1) {\n      oldFromState.getTransitionsList().splice(index, 1);\n    }\n    // add the transition to the new state\n    const fromStatePb = findStatePbByName(newFromStateName, fsm);\n    fromStatePb.addTransitions(element);\n  }\n};\n\n/**\n * Set element from formValue.\n * @param {} formValue\n * @param {*} element: the FSM element to be set.\n */\nexport const formValuesToElement = function(formValue, fsm, type, initElement) {\n  // create or use appropriate element based on type\n  let element = null;\n  if (initElement === null || initElement === undefined) {\n    switch (type) {\n      case FSMElementType.STATE:\n        element = new fsmPb.State();\n        fsm.addStates(element);\n        break;\n      case FSMElementType.TRANSITION:\n        element = new fsmPb.Transition();\n        // find from state\n        const fromStatePb = findStatePbByName(formValue.from, fsm);\n        fromStatePb.addTransitions(element);\n        break;\n      default:\n        throw new Error(\n          \"Unsupported Element Type: \" + type + \". Failed to add a new element\"\n        );\n    }\n  } else {\n    element = initElement;\n  }\n\n  // deal with type specific fields\n  switch (type) {\n    case FSMElementType.STATE:\n      setStateName(element, formValue.name, { fsm: fsm });\n      // set start state\n      if (formValue.isStartState) {\n        fsm.setStartState(formValue.name);\n      }\n      // add processors\n      formCallableToElementCallable(\n        formValue.callable,\n        element.setProcessorsList.bind(element), //bind is needed to pass context\n        fsmPb.Processor,\n        procZoo\n      );\n      break;\n    case FSMElementType.TRANSITION:\n      element.setName(formValue.name);\n      // from state\n      setTransitionFromState(element, formValue.from, {\n        fsm: fsm,\n        oldFromStateName: formValue.from\n      });\n      // to state\n      element.setNextState(formValue.to);\n      // instruction\n      let instPb = new fsmPb.Instruction();\n      if (formValue.instruction) {\n        instPb.setAudio(formValue.instruction.audio);\n        instPb.setImage(formValue.instruction.image);\n        instPb.setVideo(formValue.instruction.video);\n      }\n      element.setInstruction(instPb);\n      // add predicates\n      formCallableToElementCallable(\n        formValue.callable,\n        element.setPredicatesList.bind(element),\n        fsmPb.TransitionPredicate,\n        predZoo\n      );\n      break;\n    default:\n      throw new Error(\n        \"Unsupported Element Type: \" + type + \". Failed to add a new element\"\n      );\n  }\n};\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport matchSorter from \"match-sorter\";\nimport ListGroup from \"react-bootstrap/lib/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/lib/ListGroupItem\";\nimport { FSMElementType, getFSMElementType } from \"./utils.js\";\nimport \"react-table/react-table.css\";\nimport ReactJson from \"react-json-view\";\n\nconst getColumnWidth = (rows, accessor, headerText) => {\n  const maxWidth = 400;\n  const magicSpacing = 11;\n  const cellLength = Math.max(\n    ...rows.map(row => (`${row[accessor]}` || \"\").length),\n    headerText.length\n  );\n  return Math.min(maxWidth, cellLength * magicSpacing);\n};\n\nclass InfoBox extends Component {\n  constructor(props) {\n    super(props);\n    this.imageInstUrl = null;\n  }\n\n  prepareResource(element) {\n    let res = {};\n    // clear up urls to prevent leaking memories\n    if (this.imageInstUrl !== null) {\n      URL.revokeObjectURL(this.imageInstUrl);\n    }\n    if (element.getInstruction()) {\n      if (element.getInstruction().getImage()) {\n        let blob = new Blob([element.getInstruction().getImage()], {\n          type: \"image\"\n        });\n        this.imageInstUrl = URL.createObjectURL(blob);\n        res.imageInstUrl = this.imageInstUrl;\n      }\n    }\n    return res;\n  }\n\n  render() {\n    const { element } = this.props;\n    const elementType = getFSMElementType(element);\n\n    // prepare resources\n    let res = {};\n    if (elementType === FSMElementType.TRANSITION) {\n      res = this.prepareResource(element);\n    }\n\n    const tableData =\n      elementType === FSMElementType.STATE\n        ? element.getProcessorsList().map(callableItem => {\n            return {\n              name: callableItem.getName(),\n              callable_name: callableItem.getCallableName(),\n              callable_args: JSON.parse(callableItem.getCallableArgs())\n            };\n          })\n        : element.getPredicatesList().map(callableItem => {\n            return {\n              name: callableItem.getName(),\n              callable_name: callableItem.getCallableName(),\n              callable_args: JSON.parse(callableItem.getCallableArgs())\n            };\n          });\n    const tableColumns = [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n        filterMethod: (filter, rows) =>\n          matchSorter(rows, filter.value, { keys: [\"name\"] }),\n        filterAll: true,\n        width: getColumnWidth(tableData, \"name\", \"Name\")\n      },\n      {\n        Header: \"Type\",\n        accessor: \"callable_name\",\n        filterMethod: (filter, rows) =>\n          matchSorter(rows, filter.value, {\n            keys: [\"callable_name\"]\n          }),\n        filterAll: true,\n        width: getColumnWidth(tableData, \"callable_name\", \"Type\")\n      },\n      {\n        Header: \"Arguments\",\n        accessor: \"callable_args\",\n        filterMethod: (filter, rows) =>\n          matchSorter(rows, filter.value, {\n            keys: [\"callable_args\"]\n          }),\n        Cell: row => <ReactJson src={row.value} />,\n        filterAll: true\n      }\n    ];\n    return (\n      <ListGroup style={{ width: \"100%\", margin: \"20px\" }}>\n        <ListGroupItem variant=\"secondary\">\n          Name: {element.getName()}\n        </ListGroupItem>\n        <ListGroupItem variant=\"secondary\">\n          Type: {elementType === FSMElementType.STATE ? \"State\" : \"Transition\"}\n        </ListGroupItem>\n        {elementType === FSMElementType.TRANSITION && (\n          <>\n            <ListGroupItem variant=\"secondary\">Instruction</ListGroupItem>\n            <ListGroupItem>\n              Audio: {element.getInstruction().getAudio()}\n            </ListGroupItem>\n            {res.imageInstUrl ? (\n              <ListGroupItem>\n                Image: <img src={res.imageInstUrl} alt=\"instruction\" />\n              </ListGroupItem>\n            ) : (\n              <ListGroupItem>Image: </ListGroupItem>\n            )}\n            <ListGroupItem>\n              Video: {element.getInstruction().getVideo()}\n            </ListGroupItem>\n          </>\n        )}\n        <ListGroupItem variant=\"secondary\">\n          {elementType === FSMElementType.STATE\n            ? \"Processors\"\n            : \"Transition Predicates\"}\n        </ListGroupItem>\n        <ReactTable\n          data={tableData}\n          filterable\n          defaultFilterMethod={(filter, row) =>\n            String(row[filter.id]) === filter.value\n          }\n          columns={tableColumns}\n          defaultPageSize={3}\n        >\n          {(state, makeTable, instance) => {\n            return <div>{makeTable()}</div>;\n          }}\n        </ReactTable>\n      </ListGroup>\n    );\n  }\n}\n\nexport default InfoBox;\n","import React from \"react\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport ButtonGroup from \"react-bootstrap/lib/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/lib/Dropdown\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport { FSMElementType } from \"./utils.js\";\nimport \"./App.css\";\n\nexport const ToolBar = ({\n  onImport,\n  onAdd,\n  onExport,\n  onEdit,\n  onDelete\n}) => {\n  return (\n    <>\n      <Row>\n        <ButtonGroup>\n\t  <Col sm={3}>\n            <FileReaderInput as=\"buffer\" onChange={onImport}>\n              <Button variant=\"primary\" className=\"fw-btn\">Import</Button>\n            </FileReaderInput>\n          </Col>\n          <Col sm={3}>\n            <Button variant=\"primary\" onClick={onExport} className=\"fw-btn\">\n              Export\n          </Button>\n          </Col>\n          <Col sm={3}>\n            <Dropdown>\n              <Dropdown.Toggle id=\"dropdown-add\" className=\"fw-btn\">Add</Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => onAdd(FSMElementType.STATE)}>State</Dropdown.Item>\n                <Dropdown.Item onClick={() => onAdd(FSMElementType.TRANSITION)}>Transition</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col sm={3}>\n            <Button variant=\"primary\" onClick={onEdit} className=\"fw-btn\">\n              Edit\n          </Button>\n          </Col>\n          <Col sm={3}>\n            <Button variant=\"primary\" onClick={onDelete} className=\"fw-btn\">\n              Delete\n          </Button>\n          </Col>\n        </ButtonGroup>\n      </Row>\n    </>\n  );\n};\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/lib/Modal\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport Form from \"react-bootstrap/lib/Form\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport { Formik, Form as FormikForm, Field, FieldArray } from \"formik\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport \"./App.css\";\nimport Select from \"react-select\";\nimport procZoo from \"./processor-zoo.json\";\nimport predZoo from \"./predicate-zoo.json\";\nimport {\n  FSMElementType,\n  getPropertyByString,\n  elementToFormValues\n} from \"./utils.js\";\n\n/** Helper function to create options for Select elements\n * from a pre-defined callable zoo (procZoo or predZoo)\n *\n * @param {*} zoo\n */\nconst getZooOptions = zoo => {\n  return Object.keys(zoo).map(key => {\n    return { value: key, label: key };\n  });\n};\n\n/** Custom validate functions for Formik forms\n *\n * Formik has a wierd return requirement\n * if invalid, return a string containing the error message or return undefined.\n *\n * return null if valid, a string if invalid\n * @param {*} param0\n */\nconst isEmpty = value => {\n  let errorMessage = null;\n  if (value === undefined || value === null || !/^.+$/i.test(value)) {\n    errorMessage = \"Required. Cannot be empty.\";\n  }\n  return errorMessage;\n};\n\n/**\n * return null if valid, a string if invalid\n * @param {*} value\n * @param {*} existingItemArray\n */\nconst isDuplicate = (value, existingItemArray) => {\n  let errorMessage = null;\n  if (\n    value === undefined ||\n    value === null ||\n    existingItemArray.includes(value)\n  ) {\n    errorMessage = \"Duplicate name. Names must be unique.\";\n  }\n  return errorMessage;\n};\n\n/**\n * return null if valid, a string if invalid\n */\nconst isUniqueName = (value, existingItemArray) => {\n  return isEmpty(value) || isDuplicate(value, existingItemArray) || null;\n};\n\n/*\nCustomize the look of form fields using bootstrap.\nThese following React components should be passed as the \"component\"\nproperty of a Formik field.\n*/\nconst BSFormikField = ({\n  field, // { name, value, onChange, onBlur }\n  type,\n  label,\n  placeholder,\n  defaultValue,\n  isValid,\n  ...props\n}) => (\n  <Form.Group as={Row}>\n    <Form.Label column>{label}</Form.Label>\n    <Col>\n      <Form.Control\n        required\n        {...field}\n        {...props}\n        type={type}\n        placeholder={placeholder}\n        value={field.value || defaultValue || \"\"} // to supress uncontrolled to controlled warning\n        isValid={isValid}\n      />\n    </Col>\n  </Form.Group>\n);\n\nclass ImageUploadField extends Component {\n  constructor(props) {\n    super(props);\n    this.imageInstUrl = null;\n  }\n\n  prepareResource(imageBytes) {\n    // clear up urls to prevent leaking memories\n    if (this.imageInstUrl !== null) {\n      URL.revokeObjectURL(this.imageInstUrl);\n    }\n    let blob = new Blob([imageBytes], {\n      type: \"image\"\n    });\n    this.imageInstUrl = URL.createObjectURL(blob);\n    return {\n      imageInstUrl: this.imageInstUrl\n    };\n  }\n\n  render() {\n    const { field, form, label } = this.props;\n    let res = {};\n    if (field.value) {\n      res = this.prepareResource(field.value);\n    }\n    return (\n      <Form.Group as={Row}>\n        <Form.Label column>{label}</Form.Label>\n        {res.imageInstUrl && (\n          <Form.Label column sm={1}>\n            <img\n              src={res.imageInstUrl}\n              alt=\"instruction\"\n              style={{ width: 40, height: 40 }}\n            />\n          </Form.Label>\n        )}\n        <Col>\n          <FileReaderInput\n            as=\"buffer\"\n            onChange={(e, fileArray) => {\n              fileArray.forEach(result => {\n                const e = result[0];\n                let fileContent = e.target.result;\n                form.setFieldValue(field.name, new Uint8Array(fileContent));\n              });\n            }}\n          >\n            <Button variant=\"light\" className=\"fw-btn\">\n              New Image\n            </Button>\n          </FileReaderInput>\n        </Col>\n      </Form.Group>\n    );\n  }\n}\n\n/** Custom the look of a Formik Select field with react-select\n *\n * @param {*} param0\n */\nconst SelectFormikField = ({\n  field,\n  form, // values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  label,\n  selectOptions,\n  ...props\n}) => (\n  <Form.Group as={Row}>\n    <Form.Label column>{label}</Form.Label>\n    <Col>\n      <Select\n        {...field}\n        {...props}\n        options={selectOptions}\n        name={field.name}\n        value={\n          selectOptions\n            ? selectOptions.find(option => option.value === field.value)\n            : \"\"\n        }\n        onChange={option => form.setFieldValue(field.name, option.value)}\n        onBlur={field.onBlur}\n      />\n    </Col>\n  </Form.Group>\n);\n\nconst CallableNameField = ({\n  field, // name, value, onChange, onBlur\n  ...props\n}) => (\n  <BSFormikField\n    field={field}\n    type=\"text\"\n    label=\"name\"\n    placeholder=\"Enter Name\"\n    {...props}\n  />\n);\n\nconst CallableArgField = ({\n  field,\n  key, // unused. not passed to the field. just to suppress parent's react list warning\n  label,\n  placeholder,\n  ...props\n}) => (\n  <BSFormikField\n    field={field}\n    type=\"text\"\n    label={label}\n    placeholder={placeholder}\n    {...props}\n  />\n);\n\nconst addFieldError = (errors, fieldName) => {\n  if (getPropertyByString(errors, fieldName)) {\n    return (\n      <div className=\"text-danger\">\n        {getPropertyByString(errors, fieldName)}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\n/*\nFunctions to create a group of form field to present a \"callable\".\nThe UIs to create a \"callable\" consist of following form fields:\n1. callable name\n2. callable type\n3. A field for each callable argument (loaded from callable zoos)\n*/\nconst createCallableMultiFields = (\n  callableTitle,\n  zoo,\n  values,\n  index,\n  arrayHelpers,\n  errors\n) => {\n  const zooOptions = getZooOptions(zoo);\n  return (\n    <div key={index} className=\"border\">\n      <h6>{callableTitle}</h6>\n      <Field\n        name={`callable.${index}.name`} // add values.callable[index].name\n        component={CallableNameField}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, `callable.${index}.name`)}\n      <Field\n        name={`callable.${index}.type`} // add values.callable[index].name\n        component={SelectFormikField}\n        label=\"Type\"\n        selectOptions={zooOptions}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, `callable.${index}.type`)}\n      {getPropertyByString(values, `callable.${index}.type`) &&\n        createCallableArgMultiFields(\n          zoo[values[\"callable\"][index][\"type\"]],\n          index,\n          errors\n        )}\n      <Form.Row>\n        <Button\n          variant=\"danger\"\n          className=\"btn-block\"\n          onClick={() => arrayHelpers.remove({ index })}\n        >\n          Delete\n        </Button>\n      </Form.Row>\n    </div>\n  );\n};\n\n/*\nCreate a field for each callable argument.\n*/\nconst createCallableArgMultiFields = (args, index, errors) => {\n  const argFields = Object.keys(args).map((key, argIndex) => {\n    return (\n      <div key={index + \".arg.\" + argIndex}>\n        <Field\n          name={`callable.${index}.args.${key}`} // add values.callable[0].name\n          component={CallableArgField}\n          label={key}\n          placeholder={args[key]}\n          defaultValue=\"\"\n          validate={isEmpty}\n        />\n        {addFieldError(errors, `callable.${index}.args.${key}`)}\n      </div>\n    );\n  });\n  return argFields;\n};\n\n/** Create transition basic fields including\n * from and to state, and instructions.\n *\n * @param {*} values\n */\nconst createTransitionBasicFields = (fsm, form, errors) => {\n  const fsmStateOptions = fsm.getStatesList().map(state => {\n    return { value: state.getName(), label: state.getName() };\n  });\n  return (\n    <>\n      <Field\n        name=\"from\"\n        component={SelectFormikField}\n        label=\"From State\"\n        selectOptions={fsmStateOptions}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, \"from\")}\n      <Field\n        name=\"to\"\n        component={SelectFormikField}\n        label=\"To State\"\n        selectOptions={fsmStateOptions}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, \"to\")}\n      <Field\n        name=\"instruction.audio\"\n        component={BSFormikField}\n        type=\"text\"\n        label=\"Audio Instruction\"\n        defaultValue=\"\"\n      />\n      <Field\n        name=\"instruction.image\"\n        component={ImageUploadField}\n        label=\"Image Instruction\"\n      />\n      <Field\n        name=\"instruction.video\"\n        component={BSFormikField}\n        type=\"text\"\n        label=\"Video Instruction\"\n        defaultValue=\"\"\n      />\n    </>\n  );\n};\n\n/**\n * A Modal used to create a new FSM element.\n * The core of the modal is a Formik form that captures\n * the user-inputted properties for the element\n */\nclass ElementModal extends Component {\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n    this.onHide = this.onHide.bind(this);\n  }\n\n  onHide() {\n    // do nothing\n  }\n\n  getInitModalValuesFromElement(element, fsm) {\n    if (element === null) {\n      return {\n        callable: []\n      };\n    } else {\n      return elementToFormValues(element, fsm);\n    }\n  }\n\n  render() {\n    const {\n      show,\n      type,\n      fsm,\n      onModalCancel,\n      onModalSave,\n      initElement\n    } = this.props;\n\n    let title,\n      callableTitle = \"\";\n    let callableZoo = null;\n    let callableButtonValue = \"\";\n    switch (type) {\n      case FSMElementType.STATE:\n        title = \"State\";\n        callableTitle = \"New Processor\";\n        callableButtonValue = \"Add Processor\";\n        callableZoo = procZoo;\n        break;\n      case FSMElementType.TRANSITION:\n        title = \"Transition\";\n        callableTitle = \"New Predicate\";\n        callableButtonValue = \"Add Predicate\";\n        callableZoo = predZoo;\n        break;\n      default:\n        throw new Error(\n          \"Unsupported Element Type: \" + type + \". Failed to add a new element\"\n        );\n    }\n\n    const initValues = this.getInitModalValuesFromElement(initElement, fsm);\n\n    return (\n      <Modal show={show} onHide={this.onHide}>\n        <Modal.Header>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            ref={this.form}\n            initialValues={initValues}\n            onSubmit={(values, { props, setSubmitting }) => {\n              onModalSave(type, values, initElement);\n              setSubmitting(false);\n            }}\n            render={({ form, values, errors }) => (\n              <FormikForm>\n                <FieldArray\n                  name=\"callable\"\n                  render={arrayHelpers => {\n                    return (\n                      <>\n                        {type === FSMElementType.STATE && (\n                          <>\n                            <Field\n                              name=\"name\"\n                              component={BSFormikField}\n                              type=\"text\"\n                              label=\"Name\"\n                              validate={value => {\n                                if (\n                                  initElement === null ||\n                                  initElement === undefined\n                                ) {\n                                  const existingItemArray = fsm\n                                    .getStatesList()\n                                    .map(state => state.getName());\n                                  return isUniqueName(value, existingItemArray);\n                                } else {\n                                  return isEmpty(value);\n                                }\n                              }}\n                            />\n                            {addFieldError(errors, \"name\")}\n                            <Field name=\"isStartState\">\n                              {({ field, form }) => {\n                                return (\n                                  <Form.Group as={Row}>\n                                    <Form.Label column>\n                                      Start from this state?\n                                    </Form.Label>\n                                    <Col>\n                                      <Form.Control\n                                        type=\"checkbox\"\n                                        checked={values[field.name]}\n                                        onChange={() => {\n                                          if (values[field.name]) {\n                                            form.setFieldValue(\n                                              field.name,\n                                              false\n                                            );\n                                          } else {\n                                            form.setFieldValue(\n                                              field.name,\n                                              true\n                                            );\n                                          }\n                                        }}\n                                      />\n                                    </Col>\n                                  </Form.Group>\n                                );\n                              }}\n                            </Field>\n                          </>\n                        )}\n                        {type === FSMElementType.TRANSITION && (\n                          <>\n                            <Field\n                              name=\"name\"\n                              component={BSFormikField}\n                              type=\"text\"\n                              label=\"Name\"\n                              validate={isEmpty}\n                            />\n                            {addFieldError(errors, \"name\")}\n                            {createTransitionBasicFields(fsm, form, errors)}\n                          </>\n                        )}\n                        {values.callable.map((eachCallable, index) =>\n                          createCallableMultiFields(\n                            callableTitle,\n                            callableZoo,\n                            values,\n                            index,\n                            arrayHelpers,\n                            errors\n                          )\n                        )}\n                        <Form.Row>\n                          <Button\n                            variant=\"info\"\n                            className=\"btn-block\"\n                            onClick={() => arrayHelpers.push({})}\n                          >\n                            {callableButtonValue}\n                          </Button>\n                        </Form.Row>\n                      </>\n                    );\n                  }}\n                />\n              </FormikForm>\n            )}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onModalCancel}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={e => {\n              this.form.current.submitForm();\n            }}\n          >\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ElementModal;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/lib/Container\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Alert from \"react-bootstrap/lib/Alert\";\nimport { Diagram } from \"./diagram.js\";\nimport \"./App.css\";\nimport InfoBox from \"./infoBox.js\";\nimport { ToolBar } from \"./toolbar.js\";\nimport {\n  FSMElementType,\n  getFSMElementType,\n  formValuesToElement\n} from \"./utils.js\";\nimport ElementModal from \"./elementModal.js\";\nimport saveAs from \"file-saver\";\nvar fsmPb = require(\"./wca-state-machine_pb\");\n\nfunction loadFsm(fsmData) {\n  let fsm = null;\n  try {\n    fsm = fsmPb.StateMachine.deserializeBinary(fsmData);\n  } catch (err) {\n    throw err;\n  }\n  return fsm;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.diagramRef = React.createRef();\n    this.diagramContainerRef = React.createRef();\n    this.alert = this.alert.bind(this);\n    this.onImport = this.onImport.bind(this);\n    this.onExport = this.onExport.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onClickCell = this.onClickCell.bind(this);\n    this.onModalCancel = this.onModalCancel.bind(this);\n    this.onModalSave = this.onModalSave.bind(this);\n    this.state = {\n      fsm: new fsmPb.StateMachine(),\n      curFSMElement: null,\n      modalInitElement: null,\n      alertMsg: {\n        show: true,\n        type: \"info\",\n        msg: \"Welcome to State Machine Editor!\"\n      },\n      showNewElementModal: false,\n      newElementModalType: null\n    };\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <h1>Gabriel State Machine Editor</h1>\n        {this.state.alertMsg.msg !== \"\" && (\n          <Alert dismissible variant={this.state.alertMsg.type}>\n            {this.state.alertMsg.msg}\n          </Alert>\n        )}\n        <Row>\n          <Col sm={6} ref={this.diagramContainerRef} style={{ backgroundColor: \"lavender\" }}>\n            <h4>Diagram</h4>\n            <Diagram\n              fsm={this.state.fsm}\n              onClickCell={this.onClickCell}\n              ref={this.diagramRef}\n              paperWidth={window.innerWidth/2} // half of current window's inner width\n            />\n          </Col>\n          <Col sm={6}>\n            <ToolBar\n              onImport={this.onImport}\n              onAdd={this.onAdd}\n              onExport={this.onExport}\n              onDelete={this.onDelete}\n              onEdit={this.onEdit}\n            />\n            {this.state.curFSMElement && (\n              <Row>\n                <InfoBox\n                  element={this.state.curFSMElement}\n                  style={{ width: \"100%\" }}\n                />\n              </Row>\n            )}\n          </Col>\n        </Row>\n        <footer>\n          <Container>\n            <span className=\"text-muted\">\n              Copyright Carnegie Mellon University\n            </span>\n          </Container>\n        </footer>\n        {this.state.showNewElementModal && (\n          <ElementModal\n            fsm={this.state.fsm} // new elements may depend on existing elements (e.g. adding a transition between two states)\n            show={this.state.showNewElementModal}\n            type={this.state.newElementModalType}\n            initElement={this.state.modalInitElement} // if element is not null, then edit the element\n            onModalSave={this.onModalSave}\n            onModalCancel={this.onModalCancel}\n          />\n        )}\n      </Container>\n    );\n  }\n\n  alert(type, msg) {\n    this.setState({\n      alertMsg: {\n        type: type,\n        msg: msg\n      }\n    });\n  }\n\n  // toolbar callbacks\n  onImport(e, fileArray) {\n    fileArray.forEach(result => {\n      const e = result[0];\n      let fileContent = e.target.result;\n      let fsm = null;\n      try {\n        fsm = loadFsm(fileContent);\n        this.setState({ fsm: fsm, curFSMElement: null });\n        this.alert(\"info\", \"Success! State machine imported.\");\n      } catch (err) {\n        this.alert(\n          \"danger\",\n          \"Incorrect File Format. Failed to import the file. \\n\" + err\n        );\n      }\n    });\n  }\n\n  onExport() {\n    const fsmPb = this.state.fsm;\n    if (fsmPb.getStatesList().length === 0) {\n      this.alert(\"danger\", \"Empty state machine! There is nothing to save. \\n\");\n    } else {\n      // TODO(junjuew): fix start state. It should be marked by users\n      // instead of being the first state added\n      if (fsmPb.getStartState() === \"\") {\n        fsmPb.setStartState(fsmPb.getStatesList()[0].getName());\n      }\n      let fsmPbSerialized = fsmPb.serializeBinary();\n      let blob = new Blob([fsmPbSerialized], {\n        type: \"application/octet-stream\"\n      });\n      saveAs(blob, \"app.pbfsm\");\n    }\n  }\n\n  onAdd(type) {\n    this.setState({ showNewElementModal: true, newElementModalType: type });\n  }\n\n  isElementSafeToDelete(element) {\n    const fsm = this.state.fsm;\n    const elementType = getFSMElementType(element);\n    let isSafe = true;\n    switch (elementType) {\n      case FSMElementType.STATE:\n        // check if there are transitions starting from this state\n        if (element.getTransitionsList().length > 0) isSafe = false;\n        // check if there are transitions ending at this state\n        fsm.getStatesList().map(state => {\n          state.getTransitionsList().map(transition => {\n            if (transition.getNextState() === element.getName()) {\n              isSafe = false;\n            }\n            return null;\n          });\n          return null;\n        });\n        return isSafe;\n      case FSMElementType.TRANSITION:\n        return isSafe;\n      default:\n        throw new Error(\"Unsupported Element Type: \" + elementType);\n    }\n  }\n\n  deleteStatePb(element) {\n    const fsm = this.state.fsm;\n    if (this.isElementSafeToDelete(element)) {\n      const elementIdx = fsm.getStatesList().indexOf(element);\n      fsm.getStatesList().splice(elementIdx, 1);\n      this.setState({ fsm: fsm, curFSMElement: null });\n    } else {\n      return this.alert(\n        \"danger\",\n        \"A state cannot be deleted unless all transitions to/from it have been deleted.\"\n      );\n    }\n  }\n\n  deleteTransitionPb(element) {\n    const fsm = this.state.fsm;\n    if (this.isElementSafeToDelete(element)) {\n      // find the state this transition belons to and removes it from\n      // the transitions list\n      fsm.getStatesList().map(state => {\n        const elementIdx = state.getTransitionsList().indexOf(element);\n        if (elementIdx >= 0) {\n          state.getTransitionsList().splice(elementIdx, elementIdx + 1);\n        }\n        return null;\n      });\n      this.setState({ fsm: fsm, curFSMElement: null });\n    } else {\n      return this.alert(\"danger\", \"The transition cannot be safely deleted\");\n    }\n  }\n\n  hasCurElement() {\n    const element = this.state.curFSMElement;\n    if (element === null) {\n      this.alert(\n        \"danger\",\n        \"There is no element selected. Double-click to select an element.\"\n      );\n      return false;\n    }\n    return true;\n  }\n\n  onEdit() {\n    if (this.hasCurElement()) {\n      const element = this.state.curFSMElement;\n      const elementType = getFSMElementType(element);\n      this.setState({\n        showNewElementModal: true,\n        newElementModalType: elementType,\n        modalInitElement: element\n      });\n    }\n  }\n\n  onDelete() {\n    if (this.hasCurElement()) {\n      const element = this.state.curFSMElement;\n      const elementType = getFSMElementType(element);\n      switch (elementType) {\n        case FSMElementType.STATE:\n          this.deleteStatePb(element);\n          break;\n        case FSMElementType.TRANSITION:\n          this.deleteTransitionPb(element);\n          break;\n        default:\n          throw new Error(\"Unsupported Element Type: \" + elementType);\n      }\n    }\n  }\n\n  // diagram callbacks\n  onClickCell(elementView) {\n    const fsmElement = this.diagramRef.current.cellId2FSMElement[\n      elementView.model.id\n    ];\n    this.setState({\n      curFSMElement: fsmElement\n    });\n  }\n\n  onModalSave(type, formValue, initElement) {\n    const fsm = this.state.fsm;\n    alert(\"123\");\n    formValuesToElement(formValue, fsm, type, initElement);\n    this.setState({ fsm: fsm });\n    this.setState({ showNewElementModal: false, modalInitElement: null });\n  }\n\n  onModalCancel() {\n    this.setState({ showNewElementModal: false, modalInitElement: null });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Instruction', null, global);\ngoog.exportSymbol('proto.Processor', null, global);\ngoog.exportSymbol('proto.State', null, global);\ngoog.exportSymbol('proto.StateMachine', null, global);\ngoog.exportSymbol('proto.Transition', null, global);\ngoog.exportSymbol('proto.TransitionPredicate', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TransitionPredicate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TransitionPredicate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.TransitionPredicate.displayName = 'proto.TransitionPredicate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TransitionPredicate.prototype.toObject = function(opt_includeInstance) {\n  return proto.TransitionPredicate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TransitionPredicate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransitionPredicate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    callableName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    callableKwargsMap: (f = msg.getCallableKwargsMap()) ? f.toObject(includeInstance, undefined) : [],\n    callableArgs: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TransitionPredicate}\n */\nproto.TransitionPredicate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TransitionPredicate;\n  return proto.TransitionPredicate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TransitionPredicate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TransitionPredicate}\n */\nproto.TransitionPredicate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableName(value);\n      break;\n    case 3:\n      var value = msg.getCallableKwargsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TransitionPredicate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TransitionPredicate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TransitionPredicate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransitionPredicate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCallableName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCallableKwargsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getCallableArgs();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string callable_name = 2;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getCallableName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setCallableName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * map<string, bytes> callable_kwargs = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.TransitionPredicate.prototype.getCallableKwargsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.TransitionPredicate.prototype.clearCallableKwargsMap = function() {\n  this.getCallableKwargsMap().clear();\n};\n\n\n/**\n * optional string callable_args = 4;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getCallableArgs = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setCallableArgs = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Instruction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Instruction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Instruction.displayName = 'proto.Instruction';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Instruction.prototype.toObject = function(opt_includeInstance) {\n  return proto.Instruction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Instruction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Instruction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    audio: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    image: msg.getImage_asB64(),\n    video: msg.getVideo_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Instruction}\n */\nproto.Instruction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Instruction;\n  return proto.Instruction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Instruction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Instruction}\n */\nproto.Instruction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAudio(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setImage(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVideo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Instruction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Instruction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Instruction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAudio();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getImage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getVideo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Instruction.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Instruction.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string audio = 2;\n * @return {string}\n */\nproto.Instruction.prototype.getAudio = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Instruction.prototype.setAudio = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes image = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.Instruction.prototype.getImage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes image = 3;\n * This is a type-conversion wrapper around `getImage()`\n * @return {string}\n */\nproto.Instruction.prototype.getImage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getImage()));\n};\n\n\n/**\n * optional bytes image = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getImage()`\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.getImage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getImage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Instruction.prototype.setImage = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes video = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.Instruction.prototype.getVideo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes video = 4;\n * This is a type-conversion wrapper around `getVideo()`\n * @return {string}\n */\nproto.Instruction.prototype.getVideo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVideo()));\n};\n\n\n/**\n * optional bytes video = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVideo()`\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.getVideo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVideo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Instruction.prototype.setVideo = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Transition = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Transition.repeatedFields_, null);\n};\ngoog.inherits(proto.Transition, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Transition.displayName = 'proto.Transition';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Transition.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Transition.prototype.toObject = function(opt_includeInstance) {\n  return proto.Transition.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Transition} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Transition.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    predicatesList: jspb.Message.toObjectList(msg.getPredicatesList(),\n    proto.TransitionPredicate.toObject, includeInstance),\n    instruction: (f = msg.getInstruction()) && proto.Instruction.toObject(includeInstance, f),\n    nextState: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Transition}\n */\nproto.Transition.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Transition;\n  return proto.Transition.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Transition} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Transition}\n */\nproto.Transition.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.TransitionPredicate;\n      reader.readMessage(value,proto.TransitionPredicate.deserializeBinaryFromReader);\n      msg.addPredicates(value);\n      break;\n    case 3:\n      var value = new proto.Instruction;\n      reader.readMessage(value,proto.Instruction.deserializeBinaryFromReader);\n      msg.setInstruction(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNextState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Transition.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Transition.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Transition} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Transition.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPredicatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.TransitionPredicate.serializeBinaryToWriter\n    );\n  }\n  f = message.getInstruction();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.Instruction.serializeBinaryToWriter\n    );\n  }\n  f = message.getNextState();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Transition.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Transition.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated TransitionPredicate predicates = 2;\n * @return {!Array<!proto.TransitionPredicate>}\n */\nproto.Transition.prototype.getPredicatesList = function() {\n  return /** @type{!Array<!proto.TransitionPredicate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.TransitionPredicate, 2));\n};\n\n\n/** @param {!Array<!proto.TransitionPredicate>} value */\nproto.Transition.prototype.setPredicatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.TransitionPredicate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TransitionPredicate}\n */\nproto.Transition.prototype.addPredicates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.TransitionPredicate, opt_index);\n};\n\n\nproto.Transition.prototype.clearPredicatesList = function() {\n  this.setPredicatesList([]);\n};\n\n\n/**\n * optional Instruction instruction = 3;\n * @return {?proto.Instruction}\n */\nproto.Transition.prototype.getInstruction = function() {\n  return /** @type{?proto.Instruction} */ (\n    jspb.Message.getWrapperField(this, proto.Instruction, 3));\n};\n\n\n/** @param {?proto.Instruction|undefined} value */\nproto.Transition.prototype.setInstruction = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.Transition.prototype.clearInstruction = function() {\n  this.setInstruction(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Transition.prototype.hasInstruction = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string next_state = 4;\n * @return {string}\n */\nproto.Transition.prototype.getNextState = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Transition.prototype.setNextState = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Processor = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Processor, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Processor.displayName = 'proto.Processor';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Processor.prototype.toObject = function(opt_includeInstance) {\n  return proto.Processor.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Processor} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Processor.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    callableName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    callableKwargsMap: (f = msg.getCallableKwargsMap()) ? f.toObject(includeInstance, undefined) : [],\n    callableArgs: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Processor}\n */\nproto.Processor.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Processor;\n  return proto.Processor.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Processor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Processor}\n */\nproto.Processor.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableName(value);\n      break;\n    case 3:\n      var value = msg.getCallableKwargsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Processor.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Processor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Processor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Processor.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCallableName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCallableKwargsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getCallableArgs();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Processor.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string callable_name = 2;\n * @return {string}\n */\nproto.Processor.prototype.getCallableName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setCallableName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * map<string, bytes> callable_kwargs = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.Processor.prototype.getCallableKwargsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.Processor.prototype.clearCallableKwargsMap = function() {\n  this.getCallableKwargsMap().clear();\n};\n\n\n/**\n * optional string callable_args = 4;\n * @return {string}\n */\nproto.Processor.prototype.getCallableArgs = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setCallableArgs = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.State = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.State.repeatedFields_, null);\n};\ngoog.inherits(proto.State, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.State.displayName = 'proto.State';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.State.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.State.prototype.toObject = function(opt_includeInstance) {\n  return proto.State.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.State} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.State.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    processorsList: jspb.Message.toObjectList(msg.getProcessorsList(),\n    proto.Processor.toObject, includeInstance),\n    transitionsList: jspb.Message.toObjectList(msg.getTransitionsList(),\n    proto.Transition.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.State}\n */\nproto.State.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.State;\n  return proto.State.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.State} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.State}\n */\nproto.State.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.Processor;\n      reader.readMessage(value,proto.Processor.deserializeBinaryFromReader);\n      msg.addProcessors(value);\n      break;\n    case 3:\n      var value = new proto.Transition;\n      reader.readMessage(value,proto.Transition.deserializeBinaryFromReader);\n      msg.addTransitions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.State.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.State.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.State} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.State.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProcessorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.Processor.serializeBinaryToWriter\n    );\n  }\n  f = message.getTransitionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.Transition.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.State.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.State.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated Processor processors = 2;\n * @return {!Array<!proto.Processor>}\n */\nproto.State.prototype.getProcessorsList = function() {\n  return /** @type{!Array<!proto.Processor>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Processor, 2));\n};\n\n\n/** @param {!Array<!proto.Processor>} value */\nproto.State.prototype.setProcessorsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.Processor=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Processor}\n */\nproto.State.prototype.addProcessors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Processor, opt_index);\n};\n\n\nproto.State.prototype.clearProcessorsList = function() {\n  this.setProcessorsList([]);\n};\n\n\n/**\n * repeated Transition transitions = 3;\n * @return {!Array<!proto.Transition>}\n */\nproto.State.prototype.getTransitionsList = function() {\n  return /** @type{!Array<!proto.Transition>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Transition, 3));\n};\n\n\n/** @param {!Array<!proto.Transition>} value */\nproto.State.prototype.setTransitionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.Transition=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Transition}\n */\nproto.State.prototype.addTransitions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Transition, opt_index);\n};\n\n\nproto.State.prototype.clearTransitionsList = function() {\n  this.setTransitionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.StateMachine = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.StateMachine.repeatedFields_, null);\n};\ngoog.inherits(proto.StateMachine, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.StateMachine.displayName = 'proto.StateMachine';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.StateMachine.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.StateMachine.prototype.toObject = function(opt_includeInstance) {\n  return proto.StateMachine.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.StateMachine} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StateMachine.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    statesList: jspb.Message.toObjectList(msg.getStatesList(),\n    proto.State.toObject, includeInstance),\n    assetsMap: (f = msg.getAssetsMap()) ? f.toObject(includeInstance, undefined) : [],\n    startState: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.StateMachine}\n */\nproto.StateMachine.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.StateMachine;\n  return proto.StateMachine.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.StateMachine} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.StateMachine}\n */\nproto.StateMachine.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.State;\n      reader.readMessage(value,proto.State.deserializeBinaryFromReader);\n      msg.addStates(value);\n      break;\n    case 3:\n      var value = msg.getAssetsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStartState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.StateMachine.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.StateMachine.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.StateMachine} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StateMachine.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.State.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getStartState();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.StateMachine.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.StateMachine.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated State states = 2;\n * @return {!Array<!proto.State>}\n */\nproto.StateMachine.prototype.getStatesList = function() {\n  return /** @type{!Array<!proto.State>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.State, 2));\n};\n\n\n/** @param {!Array<!proto.State>} value */\nproto.StateMachine.prototype.setStatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.State=} opt_value\n * @param {number=} opt_index\n * @return {!proto.State}\n */\nproto.StateMachine.prototype.addStates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.State, opt_index);\n};\n\n\nproto.StateMachine.prototype.clearStatesList = function() {\n  this.setStatesList([]);\n};\n\n\n/**\n * map<string, bytes> assets = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.StateMachine.prototype.getAssetsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.StateMachine.prototype.clearAssetsMap = function() {\n  this.getAssetsMap().clear();\n};\n\n\n/**\n * optional string start_state = 4;\n * @return {string}\n */\nproto.StateMachine.prototype.getStartState = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.StateMachine.prototype.setStartState = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"],"sourceRoot":""}